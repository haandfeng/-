"smart_sources:算法笔记/zuoAlgorithm/000. 学习大纲/经典面试题课程题目汇总.md": {"path":"算法笔记/zuoAlgorithm/000. 学习大纲/经典面试题课程题目汇总.md","embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.05942039,0.01236481,0.0122799,-0.02360858,-0.04458564,0.00242804,-0.03693203,0.00401647,-0.00068419,0.01550108,0.01140861,-0.0621278,0.04088638,0.02940703,-0.01294747,-0.01943149,-0.01675332,0.032853,-0.03235932,-0.0345842,0.13389732,-0.00497939,0.02060371,-0.03387023,0.00066735,0.04015867,0.05409779,-0.03496316,-0.03520275,-0.1771111,-0.03044204,-0.05076498,0.05719508,-0.00483919,-0.0119899,-0.05505402,0.00131539,0.04095671,-0.0954327,0.05242647,0.01764636,0.06625994,0.03313861,-0.04788014,-0.00343671,-0.02082221,-0.00623192,0.03199143,0.00570036,-0.05033115,-0.02432642,-0.02366187,-0.03781363,0.05674808,-0.03106691,-0.02824116,0.0809347,0.04010813,-0.01082192,0.01692186,0.01923216,0.02426811,-0.23780283,0.04758926,0.05758172,-0.02345866,0.02285263,-0.07157426,0.05909216,0.07460301,-0.00015038,-0.00181633,0.02714971,0.04638088,-0.01047333,-0.05434991,0.01061403,-0.04362382,-0.02601633,-0.02714739,-0.10417929,0.01160081,-0.00640893,-0.05220085,0.02329061,-0.03551983,-0.01677426,-0.04582569,0.06620061,-0.01474916,0.04235171,-0.06769405,-0.01637741,-0.00686015,-0.04260391,-0.06585362,0.00709843,0.04624785,-0.0552637,0.09597103,-0.0366268,0.02604325,-0.02778506,-0.04575142,0.01564605,0.00698727,-0.06765778,-0.09550068,0.01964736,-0.03262764,-0.03115457,0.01882835,0.02988142,-0.04323957,-0.02683272,0.06001381,0.06219067,-0.07906909,-0.07666437,0.00006202,-0.04381502,-0.01575734,0.02741354,0.0194282,0.05977092,-0.0597161,0.02284293,0.08578731,0.0268029,0.01946422,0.01193954,0.03984716,-0.07797093,-0.05510351,-0.02832856,-0.0219937,0.01832363,-0.02526977,-0.05300346,-0.06121957,0.01851251,-0.11741211,0.003083,-0.06277529,-0.04450788,0.13539082,-0.00470995,0.00213173,0.00044256,-0.05428443,0.02066853,0.02336946,-0.04327037,-0.06483586,0.00808358,-0.00214028,0.02256986,0.1076847,-0.02667734,0.02117674,-0.01485004,-0.02046223,-0.03121712,0.14746851,0.05445758,-0.06390814,-0.00233133,0.00596062,0.02245754,-0.07072603,0.00949255,-0.00992528,-0.04914241,0.06410434,0.10193127,-0.00971138,0.00653369,-0.00408789,-0.03348467,0.0328356,0.02825586,0.02581382,-0.05739181,0.09067672,0.01821463,-0.02120475,0.06142452,-0.03234181,0.02607084,-0.00420176,-0.03910725,0.03475811,-0.03357764,-0.08301204,-0.05606555,-0.00439874,-0.04060088,-0.04120789,0.03381474,-0.0415721,0.13966994,0.03880541,-0.0447466,-0.0153858,-0.01626793,-0.01176002,0.0004521,-0.02228293,0.06382359,0.03731051,-0.03302142,0.03394222,-0.0123007,0.0398978,0.03249069,-0.03162817,0.01733806,0.01749225,0.01683786,0.08558706,0.0218429,-0.03458219,-0.06768785,-0.17119414,-0.00504696,0.0364784,-0.07421244,0.0082837,0.07343998,0.01414901,-0.01853416,0.02671563,0.07088772,0.06250595,-0.0015989,-0.01148626,0.06051116,-0.02511458,0.00992726,-0.01507951,-0.00790769,-0.01837824,0.02405691,-0.02715343,0.02642405,0.02719947,0.02838295,0.0148599,-0.04674913,0.11108605,-0.01605379,0.00853797,0.06702907,0.06208258,-0.03641908,0.01261157,-0.06901658,0.01813545,-0.01459509,-0.03905305,-0.03187395,-0.00580229,-0.03668324,0.00297275,0.06268106,0.01859162,-0.03787619,-0.02083005,-0.00421221,-0.02469687,-0.01552437,-0.04702628,0.02490394,0.02549271,0.02244169,0.00643183,0.03982965,0.00066332,0.01319214,0.00940586,-0.01647347,-0.04690368,-0.04067176,0.04663634,0.02156092,0.05412256,-0.00554756,-0.04096739,0.01433644,-0.00035653,-0.00612347,0.00367739,-0.01791939,-0.07761966,0.13025127,0.03536787,-0.03894823,0.065298,0.05551825,0.04166998,-0.03628961,0.02728351,-0.01105859,0.04805107,0.0023362,0.00818939,0.05641656,0.04639245,0.03089894,0.02269678,-0.04119773,-0.00208901,-0.03608673,0.02069397,0.02076082,-0.03630074,0.02168436,0.02623814,0.04259844,-0.28843376,-0.03444797,-0.01688052,0.06732899,-0.00845944,0.02107719,0.04959638,-0.02452786,-0.03454999,0.07501604,-0.04153378,0.04532271,0.03449177,-0.01740323,0.01935175,-0.08869052,0.07377823,-0.02965072,0.04288745,0.01963347,0.03630067,0.03921761,0.23857215,-0.00350262,0.03675171,0.02185122,0.02223258,0.01212816,0.05931246,0.01432262,0.00225952,-0.02822659,0.09458954,-0.0295627,0.03146729,0.02223846,0.02510069,0.00403079,0.00005852,-0.02402217,-0.04667736,-0.03785322,-0.06807575,0.04020937,0.14410186,0.04463812,-0.00260943,-0.09789287,-0.00764852,0.03152996,-0.05122341,-0.05301777,0.0383921,0.03873003,0.01175802,0.05547936,0.00697844,0.00499422,-0.06998481,-0.04562024,0.03928919,0.00163696,-0.00566125,0.06366004,0.03301656],"tokens":456}},"last_embed":{"hash":"762e2f490ab760b71d4e795e698707d0adbd4f6756f0f22541b96cb5849780ba"},"history":[],"last_read":{"hash":"762e2f490ab760b71d4e795e698707d0adbd4f6756f0f22541b96cb5849780ba","at":1734612061200},"class_name":"SmartSource","outlinks":[{"title":"一根长度为K的绳子，最多能盖住几个点","target":"一根长度为K的绳子，最多能盖住几个点","line":4},{"title":"括号有效配对问题","target":"括号有效配对问题","line":5},{"title":"判断括号有效性","target":"判断括号有效性","line":6},{"title":"最长的有效括号子串长度","target":"最长的有效括号子串长度","line":7},{"title":"最大嵌套的括号层数","target":"最大嵌套的括号层数","line":8},{"title":"最少需要涂染几个正方形","target":"最少需要涂染几个正方形","line":9},{"title":"边框全是1的最大正方形的边长","target":"边框全是1的最大正方形的边长","line":10},{"title":"根据要求构造出一个长度为M的数组","target":"根据要求构造出一个长度为M的数组","line":11},{"title":"二叉树的最大路径和","target":"二叉树的最大路径和","line":12},{"title":"行列递增矩阵的查找","target":"行列递增矩阵的查找","line":13},{"title":"使每个打包机器上的物品数量相等需要搬动的最小轮数","target":"使每个打包机器上的物品数量相等需要搬动的最小轮数","line":14},{"title":"找出最大的左部分最大值减去右部分最大值的绝对值","target":"找出最大的左部分最大值减去右部分最大值的绝对值","line":15},{"title":"数组直方图装水","target":"数组直方图装水","line":16},{"title":"二维数组直方图装水","target":"二维数组直方图装水","line":17},{"title":"累加和为aim的所有二元组跟三元组","target":"累加和为aim的所有二元组跟三元组","line":18},{"title":"第k小的数值对","target":"第k小的数值对","line":19},{"title":"每个人按照标准选工作后所能获得的最高报酬","target":"每个人按照标准选工作后所能获得的最高报酬","line":20},{"title":"背包中有多少种零食放法","target":"背包中有多少种零食放法","line":21},{"title":"矩阵中的最小路径和","target":"矩阵中的最小路径和","line":22},{"title":"最长公共子序列","target":"最长公共子序列","line":23},{"title":"两个字符串的最长公共子串","target":"两个字符串的最长公共子串","line":24},{"title":"词频最大的前K个字符串","target":"词频最大的前K个字符串","line":25},{"title":"指定结构中加入的所有字符串中，词频最大的K个","target":"指定结构中加入的所有字符串中，词频最大的K个","line":26},{"title":"打印目录结构","target":"打印目录结构","line":27},{"title":"搜索二叉树转换为有序的双向链表","target":"搜索二叉树转换为有序的双向链表","line":28},{"title":"已知中序遍历数组和先序遍历数组，返回后序遍历数组","target":"已知中序遍历数组和先序遍历数组，返回后序遍历数组","line":29},{"title":"最长递增子序列问题的O(NxlogN)的解法","target":"最长递增子序列问题的O(NxlogN)的解法","line":30},{"title":"给你一批信封，返回最大的嵌套层数","target":"给你一批信封，返回最大的嵌套层数","line":31},{"title":"子数组最大累加和","target":"子数组最大累加和","line":32},{"title":"给定一个整型矩阵，返回子矩阵的最大累加和","target":"给定一个整型矩阵，返回子矩阵的最大累加和","line":33},{"title":"问字符串s2最少删除多少字符可以成为s1的子串","target":"问字符串s2最少删除多少字符可以成为s1的子串","line":34},{"title":"将str1编辑成str2的最小代价","target":"将str1编辑成str2的最小代价","line":35},{"title":"求完全二叉树节点的个数","target":"求完全二叉树节点的个数","line":36},{"title":"LRU内存替换算法的实现","target":"LRU内存替换算法的实现","line":37},{"title":"两个字符串的最短的变换路径","target":"两个字符串的最短的变换路径","line":38},{"title":"主播们能获得的最大收益","target":"主播们能获得的最大收益","line":39},{"title":"最大子数组异或和","target":"最大子数组异或和","line":40},{"title":"字符串express能有多少种组合方式，可以达到desired的结果","target":"字符串express能有多少种组合方式，可以达到desired的结果","line":41},{"title":"以最少的跳跃次数跳到最后一个数","target":"以最少的跳跃次数跳到最后一个数","line":42},{"title":"两个有序数组相加和的Topk问题","target":"两个有序数组相加和的Topk问题","line":43},{"title":"数组能不能分成4个相等的部分","target":"数组能不能分成4个相等的部分","line":44},{"title":"判断字符串aim是否是str1和str2交错组成","target":"判断字符串aim是否是str1和str2交错组成","line":45},{"title":"最短无序连续子数组","target":"最短无序连续子数组","line":46},{"title":"返回正数数组 arr 的最小不可组成和","target":"返回正数数组 arr 的最小不可组成和","line":47},{"title":"想累加得 到 1~aim范围上所有的数，返回数组arr最少还缺几个数","target":"想累加得 到 1~aim范围上所有的数，返回数组arr最少还缺几个数","line":48},{"title":"返回数组中，有多少个独立的域","target":"返回数组中，有多少个独立的域","line":49},{"title":"全是小写字母的字符串str，删除多余字符后达到字典序最小","target":"全是小写字母的字符串str，删除多余字符后达到字典序最小","line":50},{"title":"在一个字符串中找到没有重复字符子串中最长的长度","target":"在一个字符串中找到没有重复字符子串中最长的长度","line":51},{"title":"一条直线最多能穿过多少个点","target":"一条直线最多能穿过多少个点","line":52},{"title":"一种消息接收并打印的结构设计","target":"一种消息接收并打印的结构设计","line":53},{"title":"普通硬币跟纪念币拼出指定面值","target":"普通硬币跟纪念币拼出指定面值","line":54},{"title":"1~N中所有数字包含1的个数","target":"1~N中所有数字包含1的个数","line":55},{"title":"打怪兽需要花的最小钱数","target":"打怪兽需要花的最小钱数","line":56},{"title":"最大可整合子数组的长度","target":"最大可整合子数组的长度","line":57},{"title":"最少添加多少字符使字符串变为回文串","target":"最少添加多少字符使字符串变为回文串","line":58},{"title":"二维数组最大递增链的长度","target":"二维数组最大递增链的长度","line":59},{"title":"数组中离给定K值最近的子数组累加和","target":"数组中离给定K值最近的子数组累加和","line":60},{"title":"二维数组中离给定K值最近的子矩阵累加和","target":"二维数组中离给定K值最近的子矩阵累加和","line":61},{"title":"二维数组中可以走出的单词","target":"二维数组中可以走出的单词","line":62},{"title":"数组中添加加减乘除运算符得到指定值的所有方法","target":"数组中添加加减乘除运算符得到指定值的所有方法","line":63},{"title":"只做一次交易买卖股票的最大钱数","target":"只做一次交易买卖股票的最大钱数","line":64},{"title":"多次交易买卖股票的最大钱数","target":"多次交易买卖股票的最大钱数","line":65},{"title":"最多K次交易买卖股票的最大钱数","target":"最多K次交易买卖股票的最大钱数","line":66},{"title":"给定两个字符串S和T，返回S子序列等于T的不同子序列个数","target":"给定两个字符串S和T，返回S子序列等于T的不同子序列个数","line":67},{"title":"骑士能见到公主的最少初始血量","target":"骑士能见到公主的最少初始血量","line":68},{"title":"矩阵往返一次的最大路径和","target":"矩阵往返一次的最大路径和","line":69},{"title":"无序数组如果排序之后相邻数之间的最大差值","target":"无序数组如果排序之后相邻数之间的最大差值","line":70},{"title":"使用单词表拼接长字符串的方法数","target":"使用单词表拼接长字符串的方法数","line":71},{"title":"求二叉树路径累加和为K是最长路径的节点数","target":"求二叉树路径累加和为K是最长路径的节点数","line":72},{"title":"找到数组中只出现1次的数","target":"找到数组中只出现1次的数","line":73},{"title":"数组中出现次数超过一半及超过N除K的数","target":"数组中出现次数超过一半及超过N除K的数","line":74},{"title":"大楼最高点变化的轮廓线","target":"大楼最高点变化的轮廓线","line":75},{"title":"两个有序数组中最大的k个数","target":"两个有序数组中最大的k个数","line":76},{"title":"Nim博弈问题","target":"Nim博弈问题","line":77},{"title":"约瑟夫环问题","target":"约瑟夫环问题","line":78},{"title":"乘客坐船使用的最少船数","target":"乘客坐船使用的最少船数","line":79},{"title":"喝咖啡洗咖啡杯问题","target":"喝咖啡洗咖啡杯问题","line":80},{"title":"喝咖啡的最好时间","target":"喝咖啡的最好时间","line":81},{"title":"最长回文子序列","target":"最长回文子序列","line":82},{"title":"蛇走的轨迹问题","target":"蛇走的轨迹问题","line":83},{"title":"基本计算器","target":"基本计算器","line":84},{"title":"子序列回文","target":"子序列回文","line":85},{"title":"整数拆分","target":"整数拆分","line":86},{"title":"求1~N所有数字排列中,等于指定K个逆序对数的排列数","target":"求1~N所有数字排列中,等于指定K个逆序对数的排列数","line":87},{"title":"200. ★算法题目汇总★/★算法面试题汇总/搜索二叉树上最大子拓扑结构的大小","target":"200. ★算法题目汇总★/★算法面试题汇总/搜索二叉树上最大子拓扑结构的大小","line":88},{"title":"将长度为2N数组的前半跟后半数组每个数交替","target":"将长度为2N数组的前半跟后半数组每个数交替","line":89},{"title":"项目经理和程序员","target":"项目经理和程序员","line":90},{"title":"调整BST中错误的两个节点","target":"调整BST中错误的两个节点","line":91},{"title":"能够互相看见环形山的对数","target":"能够互相看见环形山的对数","line":92},{"title":"非负数组子序列中累加和%m的最大值","target":"非负数组子序列中累加和%m的最大值","line":93},{"title":"字符串匹配问题","target":"字符串匹配问题","line":94},{"title":"自由之路","target":"自由之路","line":95},{"title":"打气球的最大分数","target":"打气球的最大分数","line":96},{"title":"汉诺塔游戏中的最优状态","target":"汉诺塔游戏中的最优状态","line":97},{"title":"合并相邻K个数字的最小代价","target":"合并相邻K个数字的最小代价","line":98},{"title":"玄变字符串","target":"玄变字符串","line":99},{"title":"最短包含子串","target":"最短包含子串","line":100},{"title":"LFU内存替换算法的实现","target":"LFU内存替换算法的实现","line":101},{"title":"加油站的良好出发点问题","target":"加油站的良好出发点问题","line":102},{"title":"距离首都距离","target":"距离首都距离","line":103},{"title":"分糖果问题","target":"分糖果问题","line":104},{"title":"二叉树放置照相机","target":"二叉树放置照相机","line":105},{"title":"数组最大的三子数组的最大和","target":"数组最大的三子数组的最大和","line":106},{"title":"牛牛分田地","target":"牛牛分田地","line":107},{"title":"打砖块","target":"粘在天花板上的数字与炸弹","line":108},{"title":"等累加和集合对中最大的累加和","target":"等累加和集合对中最大的累加和","line":109},{"title":"不同的子序列 II","target":"不同的子序列 II","line":110},{"title":"数组中全是1的最大正方形","target":"数组中全是1的最大正方形","line":111},{"title":"画匠问题","target":"画匠问题","line":112},{"title":"丢棋子问题","target":"丢棋子问题","line":113},{"title":"邮局选址问题","target":"邮局选址问题","line":114},{"title":"求数组调整之后的逆序对数量","target":"求数组调整之后的逆序对数量","line":115},{"title":"寻找回文串","target":"寻找回文串","line":116},{"title":"无序数组中最长的连续序列的长度","target":"无序数组中最长的连续序列的长度","line":117},{"title":"二叉树节点间最近公共祖先的批量查询问题","target":"二叉树节点间最近公共祖先的批量查询问题","line":118},{"title":"最大的全是1的子矩阵中1的数量","target":"最大的全是1的子矩阵中1的数量","line":119},{"title":"移除盒子","target":"移除盒子","line":120},{"title":"奇怪的打印机","target":"奇怪的打印机","line":121},{"title":"最小区间","target":"最小区间","line":122},{"title":"还原数组丢失的数字","target":"还原数组丢失的数字","line":123},{"title":"TSP问题 ","target":"TSP问题 ","line":124},{"title":"铺瓷砖问题","target":"铺瓷砖问题","line":125},{"title":"后缀数组","target":"后缀数组","line":126},{"title":"拼接最大数","target":"拼接最大数","line":127}],"last_import":{"mtime":1665385244000,"size":5586,"at":1734612056469,"hash":"762e2f490ab760b71d4e795e698707d0adbd4f6756f0f22541b96cb5849780ba"},"blocks":{"#经典面试题课程题目汇总":[1,127],"#---frontmatter---":[3,null]}},
"smart_blocks:算法笔记/zuoAlgorithm/000. 学习大纲/经典面试题课程题目汇总.md#经典面试题课程题目汇总": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.06040185,0.01240148,0.01297846,-0.02235943,-0.04521447,-0.00013033,-0.03572576,0.00438976,0.00014778,0.01511559,0.01186258,-0.06195988,0.0424207,0.02712889,-0.01192711,-0.01728235,-0.01643543,0.03156292,-0.03347284,-0.03762983,0.13327661,-0.00431458,0.01900913,-0.03314521,-0.00054075,0.04045316,0.05281888,-0.03426929,-0.03577894,-0.17653266,-0.03065632,-0.05078994,0.05697148,-0.00443756,-0.01247898,-0.05683493,0.00304088,0.04127468,-0.09423373,0.04944813,0.01801437,0.06757355,0.03453818,-0.04760988,-0.0029561,-0.01997385,-0.00563212,0.03269071,0.00585603,-0.05058112,-0.02219823,-0.02317871,-0.03793145,0.0581609,-0.03287257,-0.02754023,0.08263922,0.0403295,-0.01052876,0.01426923,0.01967287,0.02444587,-0.23559219,0.04977174,0.05950319,-0.02462732,0.0235327,-0.07352719,0.05961401,0.07269328,-0.00057644,-0.00103161,0.02633852,0.04824366,-0.01126518,-0.05495214,0.01156533,-0.04514607,-0.02743913,-0.02476457,-0.1054991,0.00789836,-0.00593251,-0.05462258,0.02228361,-0.03286419,-0.01635149,-0.04525066,0.06569433,-0.01483752,0.04565044,-0.06761488,-0.01734856,-0.00866007,-0.04462076,-0.06521218,0.00917478,0.04572929,-0.05557722,0.09559018,-0.03836349,0.02724358,-0.02727439,-0.04697141,0.01380733,0.00698601,-0.06638288,-0.0946783,0.02025949,-0.03502161,-0.03058016,0.01911918,0.02922039,-0.04195752,-0.02615922,0.06198778,0.05994384,-0.08136128,-0.07789988,0.00064802,-0.04184762,-0.01631997,0.0286759,0.02014082,0.05801643,-0.05896444,0.02371022,0.08619317,0.02509247,0.01786849,0.01279336,0.04094143,-0.07702576,-0.05406683,-0.0282356,-0.02264786,0.01790673,-0.02493191,-0.0524744,-0.06318898,0.01697909,-0.11666767,0.00151117,-0.06468282,-0.04305544,0.13227166,-0.00475725,0.0027745,-0.00048183,-0.05517259,0.02014551,0.02286118,-0.04400614,-0.06514781,0.00875887,-0.00186321,0.02543128,0.10608143,-0.02582955,0.02338835,-0.01419821,-0.01975689,-0.03228732,0.14762409,0.05567509,-0.06602145,-0.00324011,0.00454468,0.02252305,-0.07036603,0.00843215,-0.00866225,-0.0489179,0.06268063,0.09878684,-0.01049873,0.00324149,-0.002549,-0.0316348,0.0343761,0.03056876,0.02825213,-0.0587451,0.08990012,0.01791744,-0.02321805,0.06067306,-0.03207185,0.0248733,-0.00542201,-0.0390134,0.03468623,-0.03468065,-0.08423162,-0.05449093,-0.00605388,-0.0401025,-0.03840848,0.03598864,-0.04290046,0.13973834,0.03974646,-0.04332348,-0.01545084,-0.01558017,-0.0108433,-0.0012728,-0.021833,0.06590357,0.03644715,-0.03257678,0.03565047,-0.01170491,0.04037434,0.03205567,-0.02958976,0.01640758,0.01774561,0.01593587,0.08540766,0.02298029,-0.03575931,-0.06793541,-0.1712762,-0.00560716,0.03787332,-0.07311504,0.00686288,0.07392623,0.01668753,-0.01978595,0.02395532,0.0695339,0.05843383,-0.0016491,-0.01111583,0.06188955,-0.02459411,0.011673,-0.01417228,-0.0080102,-0.01780952,0.02520603,-0.02764001,0.02820475,0.0260705,0.03004438,0.0130802,-0.04861397,0.1096775,-0.01995875,0.00764473,0.06866445,0.06074087,-0.03735346,0.01214925,-0.06905182,0.01791644,-0.01371581,-0.03783687,-0.03293844,-0.00455513,-0.03761077,0.0031638,0.06396966,0.01746315,-0.03831648,-0.0188001,-0.00405517,-0.02504014,-0.01609643,-0.04958125,0.02305842,0.025413,0.02246428,0.00591059,0.03813676,0.00152076,0.0116966,0.01063599,-0.01442005,-0.04713463,-0.03919884,0.04623279,0.02046703,0.0547454,-0.0024532,-0.04186298,0.01572338,-0.00036801,-0.00507552,0.00425898,-0.02081474,-0.07904679,0.13116783,0.03589895,-0.04043958,0.06679645,0.05583007,0.04035932,-0.03705022,0.02870261,-0.01073343,0.04643574,0.00268969,0.00958688,0.05812903,0.0462799,0.03134414,0.02468651,-0.04165606,-0.00223966,-0.03746667,0.01968112,0.02169524,-0.03581117,0.02082957,0.02644083,0.04395019,-0.28784296,-0.0342283,-0.01966951,0.06665345,-0.00962888,0.02096588,0.04981933,-0.02220669,-0.03311029,0.07483795,-0.04131455,0.04652362,0.03289112,-0.01759484,0.02198551,-0.09042377,0.07520019,-0.02775485,0.04179353,0.02129191,0.03452605,0.04016107,0.23849344,-0.00388727,0.0373501,0.02162523,0.02277162,0.01038291,0.05924952,0.01455311,0.00100041,-0.02659244,0.09469561,-0.03014816,0.03088528,0.02066404,0.02731737,0.00479386,-0.0000682,-0.02671035,-0.04446048,-0.0384589,-0.06806327,0.04063759,0.14305604,0.04573441,-0.00336928,-0.0984125,-0.00944846,0.03299594,-0.05098518,-0.05162248,0.03957706,0.03789844,0.0108354,0.0543388,0.00615171,0.00678703,-0.0696026,-0.0445125,0.04148085,0.00229126,-0.00540299,0.06233506,0.0345798],"tokens":459}},"last_embed":{"hash":"762e2f490ab760b71d4e795e698707d0adbd4f6756f0f22541b96cb5849780ba"},"text":null,"length":0,"last_read":{"hash":"762e2f490ab760b71d4e795e698707d0adbd4f6756f0f22541b96cb5849780ba","at":1734612061183},"class_name":"SmartBlock","key":"算法笔记/zuoAlgorithm/000. 学习大纲/经典面试题课程题目汇总.md#经典面试题课程题目汇总","lines":[1,127],"size":2622,"outlinks":[{"title":"一根长度为K的绳子，最多能盖住几个点","target":"一根长度为K的绳子，最多能盖住几个点","line":4},{"title":"括号有效配对问题","target":"括号有效配对问题","line":5},{"title":"判断括号有效性","target":"判断括号有效性","line":6},{"title":"最长的有效括号子串长度","target":"最长的有效括号子串长度","line":7},{"title":"最大嵌套的括号层数","target":"最大嵌套的括号层数","line":8},{"title":"最少需要涂染几个正方形","target":"最少需要涂染几个正方形","line":9},{"title":"边框全是1的最大正方形的边长","target":"边框全是1的最大正方形的边长","line":10},{"title":"根据要求构造出一个长度为M的数组","target":"根据要求构造出一个长度为M的数组","line":11},{"title":"二叉树的最大路径和","target":"二叉树的最大路径和","line":12},{"title":"行列递增矩阵的查找","target":"行列递增矩阵的查找","line":13},{"title":"使每个打包机器上的物品数量相等需要搬动的最小轮数","target":"使每个打包机器上的物品数量相等需要搬动的最小轮数","line":14},{"title":"找出最大的左部分最大值减去右部分最大值的绝对值","target":"找出最大的左部分最大值减去右部分最大值的绝对值","line":15},{"title":"数组直方图装水","target":"数组直方图装水","line":16},{"title":"二维数组直方图装水","target":"二维数组直方图装水","line":17},{"title":"累加和为aim的所有二元组跟三元组","target":"累加和为aim的所有二元组跟三元组","line":18},{"title":"第k小的数值对","target":"第k小的数值对","line":19},{"title":"每个人按照标准选工作后所能获得的最高报酬","target":"每个人按照标准选工作后所能获得的最高报酬","line":20},{"title":"背包中有多少种零食放法","target":"背包中有多少种零食放法","line":21},{"title":"矩阵中的最小路径和","target":"矩阵中的最小路径和","line":22},{"title":"最长公共子序列","target":"最长公共子序列","line":23},{"title":"两个字符串的最长公共子串","target":"两个字符串的最长公共子串","line":24},{"title":"词频最大的前K个字符串","target":"词频最大的前K个字符串","line":25},{"title":"指定结构中加入的所有字符串中，词频最大的K个","target":"指定结构中加入的所有字符串中，词频最大的K个","line":26},{"title":"打印目录结构","target":"打印目录结构","line":27},{"title":"搜索二叉树转换为有序的双向链表","target":"搜索二叉树转换为有序的双向链表","line":28},{"title":"已知中序遍历数组和先序遍历数组，返回后序遍历数组","target":"已知中序遍历数组和先序遍历数组，返回后序遍历数组","line":29},{"title":"最长递增子序列问题的O(NxlogN)的解法","target":"最长递增子序列问题的O(NxlogN)的解法","line":30},{"title":"给你一批信封，返回最大的嵌套层数","target":"给你一批信封，返回最大的嵌套层数","line":31},{"title":"子数组最大累加和","target":"子数组最大累加和","line":32},{"title":"给定一个整型矩阵，返回子矩阵的最大累加和","target":"给定一个整型矩阵，返回子矩阵的最大累加和","line":33},{"title":"问字符串s2最少删除多少字符可以成为s1的子串","target":"问字符串s2最少删除多少字符可以成为s1的子串","line":34},{"title":"将str1编辑成str2的最小代价","target":"将str1编辑成str2的最小代价","line":35},{"title":"求完全二叉树节点的个数","target":"求完全二叉树节点的个数","line":36},{"title":"LRU内存替换算法的实现","target":"LRU内存替换算法的实现","line":37},{"title":"两个字符串的最短的变换路径","target":"两个字符串的最短的变换路径","line":38},{"title":"主播们能获得的最大收益","target":"主播们能获得的最大收益","line":39},{"title":"最大子数组异或和","target":"最大子数组异或和","line":40},{"title":"字符串express能有多少种组合方式，可以达到desired的结果","target":"字符串express能有多少种组合方式，可以达到desired的结果","line":41},{"title":"以最少的跳跃次数跳到最后一个数","target":"以最少的跳跃次数跳到最后一个数","line":42},{"title":"两个有序数组相加和的Topk问题","target":"两个有序数组相加和的Topk问题","line":43},{"title":"数组能不能分成4个相等的部分","target":"数组能不能分成4个相等的部分","line":44},{"title":"判断字符串aim是否是str1和str2交错组成","target":"判断字符串aim是否是str1和str2交错组成","line":45},{"title":"最短无序连续子数组","target":"最短无序连续子数组","line":46},{"title":"返回正数数组 arr 的最小不可组成和","target":"返回正数数组 arr 的最小不可组成和","line":47},{"title":"想累加得 到 1~aim范围上所有的数，返回数组arr最少还缺几个数","target":"想累加得 到 1~aim范围上所有的数，返回数组arr最少还缺几个数","line":48},{"title":"返回数组中，有多少个独立的域","target":"返回数组中，有多少个独立的域","line":49},{"title":"全是小写字母的字符串str，删除多余字符后达到字典序最小","target":"全是小写字母的字符串str，删除多余字符后达到字典序最小","line":50},{"title":"在一个字符串中找到没有重复字符子串中最长的长度","target":"在一个字符串中找到没有重复字符子串中最长的长度","line":51},{"title":"一条直线最多能穿过多少个点","target":"一条直线最多能穿过多少个点","line":52},{"title":"一种消息接收并打印的结构设计","target":"一种消息接收并打印的结构设计","line":53},{"title":"普通硬币跟纪念币拼出指定面值","target":"普通硬币跟纪念币拼出指定面值","line":54},{"title":"1~N中所有数字包含1的个数","target":"1~N中所有数字包含1的个数","line":55},{"title":"打怪兽需要花的最小钱数","target":"打怪兽需要花的最小钱数","line":56},{"title":"最大可整合子数组的长度","target":"最大可整合子数组的长度","line":57},{"title":"最少添加多少字符使字符串变为回文串","target":"最少添加多少字符使字符串变为回文串","line":58},{"title":"二维数组最大递增链的长度","target":"二维数组最大递增链的长度","line":59},{"title":"数组中离给定K值最近的子数组累加和","target":"数组中离给定K值最近的子数组累加和","line":60},{"title":"二维数组中离给定K值最近的子矩阵累加和","target":"二维数组中离给定K值最近的子矩阵累加和","line":61},{"title":"二维数组中可以走出的单词","target":"二维数组中可以走出的单词","line":62},{"title":"数组中添加加减乘除运算符得到指定值的所有方法","target":"数组中添加加减乘除运算符得到指定值的所有方法","line":63},{"title":"只做一次交易买卖股票的最大钱数","target":"只做一次交易买卖股票的最大钱数","line":64},{"title":"多次交易买卖股票的最大钱数","target":"多次交易买卖股票的最大钱数","line":65},{"title":"最多K次交易买卖股票的最大钱数","target":"最多K次交易买卖股票的最大钱数","line":66},{"title":"给定两个字符串S和T，返回S子序列等于T的不同子序列个数","target":"给定两个字符串S和T，返回S子序列等于T的不同子序列个数","line":67},{"title":"骑士能见到公主的最少初始血量","target":"骑士能见到公主的最少初始血量","line":68},{"title":"矩阵往返一次的最大路径和","target":"矩阵往返一次的最大路径和","line":69},{"title":"无序数组如果排序之后相邻数之间的最大差值","target":"无序数组如果排序之后相邻数之间的最大差值","line":70},{"title":"使用单词表拼接长字符串的方法数","target":"使用单词表拼接长字符串的方法数","line":71},{"title":"求二叉树路径累加和为K是最长路径的节点数","target":"求二叉树路径累加和为K是最长路径的节点数","line":72},{"title":"找到数组中只出现1次的数","target":"找到数组中只出现1次的数","line":73},{"title":"数组中出现次数超过一半及超过N除K的数","target":"数组中出现次数超过一半及超过N除K的数","line":74},{"title":"大楼最高点变化的轮廓线","target":"大楼最高点变化的轮廓线","line":75},{"title":"两个有序数组中最大的k个数","target":"两个有序数组中最大的k个数","line":76},{"title":"Nim博弈问题","target":"Nim博弈问题","line":77},{"title":"约瑟夫环问题","target":"约瑟夫环问题","line":78},{"title":"乘客坐船使用的最少船数","target":"乘客坐船使用的最少船数","line":79},{"title":"喝咖啡洗咖啡杯问题","target":"喝咖啡洗咖啡杯问题","line":80},{"title":"喝咖啡的最好时间","target":"喝咖啡的最好时间","line":81},{"title":"最长回文子序列","target":"最长回文子序列","line":82},{"title":"蛇走的轨迹问题","target":"蛇走的轨迹问题","line":83},{"title":"基本计算器","target":"基本计算器","line":84},{"title":"子序列回文","target":"子序列回文","line":85},{"title":"整数拆分","target":"整数拆分","line":86},{"title":"求1~N所有数字排列中,等于指定K个逆序对数的排列数","target":"求1~N所有数字排列中,等于指定K个逆序对数的排列数","line":87},{"title":"200. ★算法题目汇总★/★算法面试题汇总/搜索二叉树上最大子拓扑结构的大小","target":"200. ★算法题目汇总★/★算法面试题汇总/搜索二叉树上最大子拓扑结构的大小","line":88},{"title":"将长度为2N数组的前半跟后半数组每个数交替","target":"将长度为2N数组的前半跟后半数组每个数交替","line":89},{"title":"项目经理和程序员","target":"项目经理和程序员","line":90},{"title":"调整BST中错误的两个节点","target":"调整BST中错误的两个节点","line":91},{"title":"能够互相看见环形山的对数","target":"能够互相看见环形山的对数","line":92},{"title":"非负数组子序列中累加和%m的最大值","target":"非负数组子序列中累加和%m的最大值","line":93},{"title":"字符串匹配问题","target":"字符串匹配问题","line":94},{"title":"自由之路","target":"自由之路","line":95},{"title":"打气球的最大分数","target":"打气球的最大分数","line":96},{"title":"汉诺塔游戏中的最优状态","target":"汉诺塔游戏中的最优状态","line":97},{"title":"合并相邻K个数字的最小代价","target":"合并相邻K个数字的最小代价","line":98},{"title":"玄变字符串","target":"玄变字符串","line":99},{"title":"最短包含子串","target":"最短包含子串","line":100},{"title":"LFU内存替换算法的实现","target":"LFU内存替换算法的实现","line":101},{"title":"加油站的良好出发点问题","target":"加油站的良好出发点问题","line":102},{"title":"距离首都距离","target":"距离首都距离","line":103},{"title":"分糖果问题","target":"分糖果问题","line":104},{"title":"二叉树放置照相机","target":"二叉树放置照相机","line":105},{"title":"数组最大的三子数组的最大和","target":"数组最大的三子数组的最大和","line":106},{"title":"牛牛分田地","target":"牛牛分田地","line":107},{"title":"打砖块","target":"粘在天花板上的数字与炸弹","line":108},{"title":"等累加和集合对中最大的累加和","target":"等累加和集合对中最大的累加和","line":109},{"title":"不同的子序列 II","target":"不同的子序列 II","line":110},{"title":"数组中全是1的最大正方形","target":"数组中全是1的最大正方形","line":111},{"title":"画匠问题","target":"画匠问题","line":112},{"title":"丢棋子问题","target":"丢棋子问题","line":113},{"title":"邮局选址问题","target":"邮局选址问题","line":114},{"title":"求数组调整之后的逆序对数量","target":"求数组调整之后的逆序对数量","line":115},{"title":"寻找回文串","target":"寻找回文串","line":116},{"title":"无序数组中最长的连续序列的长度","target":"无序数组中最长的连续序列的长度","line":117},{"title":"二叉树节点间最近公共祖先的批量查询问题","target":"二叉树节点间最近公共祖先的批量查询问题","line":118},{"title":"最大的全是1的子矩阵中1的数量","target":"最大的全是1的子矩阵中1的数量","line":119},{"title":"移除盒子","target":"移除盒子","line":120},{"title":"奇怪的打印机","target":"奇怪的打印机","line":121},{"title":"最小区间","target":"最小区间","line":122},{"title":"还原数组丢失的数字","target":"还原数组丢失的数字","line":123},{"title":"TSP问题 ","target":"TSP问题 ","line":124},{"title":"铺瓷砖问题","target":"铺瓷砖问题","line":125},{"title":"后缀数组","target":"后缀数组","line":126},{"title":"拼接最大数","target":"拼接最大数","line":127}]},
"smart_blocks:算法笔记/zuoAlgorithm/000. 学习大纲/经典面试题课程题目汇总.md#---frontmatter---": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.063436,0.03275564,0.05084977,0.00260949,0.02657386,-0.032476,-0.04603567,0.01296554,0.04518733,0.03864049,0.03414559,-0.09232908,0.03621654,0.01928824,-0.00158608,0.02085785,-0.02020204,0.09261209,-0.0042239,-0.02281095,0.13910161,-0.04276421,-0.00258854,-0.09565333,0.02693182,0.03590406,-0.03067646,-0.01742016,0.01809764,-0.16057706,-0.02133461,-0.02973803,0.01598295,-0.00261597,0.04645537,-0.00585846,-0.03417004,0.0631193,-0.09907184,0.05179368,0.00855878,0.04610347,0.01294719,-0.03279658,-0.01381128,0.01110331,-0.00270674,-0.00449436,0.03486957,-0.05516785,-0.01713763,-0.0344805,-0.01196242,0.03023762,0.00435371,-0.02079904,0.05554394,0.0227488,-0.03660022,0.04908329,0.01276357,0.02733305,-0.18612313,0.02420265,0.06339514,-0.0146229,0.03229992,-0.05419042,0.03614115,0.08537101,-0.01265435,0.04756133,0.00673931,0.0828764,0.00295624,-0.05178477,0.00990443,-0.02177208,-0.02678093,0.00460489,-0.12594409,-0.0554585,-0.045383,-0.0158967,-0.02686511,-0.04803607,-0.00399652,-0.01561585,0.04716284,0.01792186,0.00546655,-0.01584884,0.05165745,0.00498646,-0.01168551,-0.03272361,-0.04349627,0.04615078,-0.07178406,0.10551708,-0.05129545,0.03655135,-0.02353206,-0.02454021,0.02134868,-0.00362004,-0.05413551,-0.0274723,0.02809575,-0.03889993,0.05399308,-0.00722649,0.08846267,-0.05285755,0.01848745,-0.03559732,0.04854865,-0.01995918,-0.06754372,0.02051675,-0.08247739,-0.04616397,0.03288502,-0.00593266,0.03599304,-0.01260718,0.04652093,0.08778378,0.05020102,0.02589213,0.00687129,-0.02266484,-0.07044365,-0.01351045,-0.02869353,-0.02375715,-0.0110717,-0.02646687,-0.03816415,-0.0769801,0.00737176,-0.06335249,0.03589758,-0.05091464,-0.01917415,0.04985516,-0.02908779,0.04409581,0.00616592,-0.0399127,-0.00970484,0.04448372,-0.05657596,-0.04979279,0.01285774,-0.07380078,0.03104356,0.1201643,-0.0059249,-0.01586711,0.00120074,-0.03047869,-0.06278034,0.14497314,0.03512476,-0.02722141,0.01105845,0.01301336,-0.00832733,-0.04501617,-0.02711734,-0.02685787,-0.03205422,0.0306884,0.09319758,-0.00100425,0.0078832,-0.01067274,-0.05050116,0.03832725,0.04588902,-0.00467974,-0.06100175,0.03502659,0.02212647,-0.01696284,0.06374203,-0.03542421,0.04400324,0.01639223,-0.09530867,0.03213295,-0.03857454,-0.06512885,-0.04366267,0.00482067,-0.01872406,-0.05057325,0.00069659,-0.02250875,0.13357835,0.04413788,-0.0263593,-0.03621427,-0.05047172,0.00342126,0.00125733,-0.02164343,0.0207908,0.04923315,-0.00855107,-0.01488079,0.00387203,0.03308497,0.03268382,-0.02976332,0.0295301,0.03743408,0.01181853,0.04207746,0.00349732,0.01690033,-0.08638047,-0.2227477,0.02104743,0.03040131,-0.03221207,-0.01779279,0.02126359,-0.0137564,-0.05882364,0.0370849,0.05978201,0.06844858,-0.01722615,-0.02952531,0.05937914,0.00540849,-0.01164249,0.05818,-0.04309727,-0.06433865,0.01833775,0.01849294,-0.02916836,0.00412879,-0.03230914,0.03047417,-0.02431451,0.14498903,0.03129833,0.02921691,0.00339019,0.02854222,0.01043156,-0.05084478,-0.19848819,0.00777925,0.00039729,-0.00624816,0.00678779,0.02261735,-0.01472285,0.00083196,0.0264181,-0.02749907,-0.09281792,0.00599113,-0.01312819,-0.00367642,-0.02134209,-0.03117551,0.0214259,-0.00231824,0.05512169,0.08820535,0.08837821,0.0080334,0.01971635,-0.02691301,-0.01414592,-0.05396965,0.00671372,-0.01061076,0.02947553,0.03789249,-0.05551197,-0.01726998,0.0593347,-0.02471259,0.00964414,0.01533948,0.01306206,-0.08257679,0.10472537,0.04773449,-0.07816886,0.00076284,0.03700023,0.01137942,-0.01447584,-0.04764909,-0.03353697,0.04259716,-0.01392869,0.00548792,0.03421878,0.00323353,0.00903727,0.00764043,-0.04507325,0.02814684,0.01543885,0.0413189,0.00761306,-0.04073862,0.00401196,0.08921757,-0.01035233,-0.26315024,-0.00953673,0.01578191,0.03061256,-0.01211674,0.0725821,0.05657554,-0.03391859,-0.01570012,0.05354255,-0.10722014,0.06945465,0.04982871,-0.07437085,-0.00327987,-0.04566832,0.07509039,-0.00402255,0.07068697,0.04328441,0.03302466,-0.01074156,0.23974729,0.00045494,0.0344394,-0.01956093,0.0245638,-0.0055946,0.04600943,0.00277815,0.01660142,-0.00241996,0.04640759,-0.05780772,0.02705082,0.02679259,-0.02502309,0.05274474,-0.00282912,-0.03455412,-0.09250135,-0.01281453,-0.05277031,0.01834892,0.11165262,0.00196096,-0.04683091,-0.02313002,0.0131317,0.04292218,-0.05992849,-0.04404496,0.02009109,0.06025667,0.00808306,0.0479782,0.01780255,-0.00669984,-0.05669721,-0.02215592,0.05408512,0.07044911,-0.00327795,0.04524444,0.05625112],"tokens":44}},"last_embed":{"hash":null},"text":null,"length":0,"last_read":{"hash":null,"at":0},"class_name":"SmartBlock","key":"算法笔记/zuoAlgorithm/000. 学习大纲/经典面试题课程题目汇总.md#---frontmatter---","lines":[3,null],"size":0,"outlinks":[]},