"smart_sources:算法笔记/zuoAlgorithm/000. 学习大纲/__算法数据结构体系学习班题目汇总.md": {"path":"算法笔记/zuoAlgorithm/000. 学习大纲/__算法数据结构体系学习班题目汇总.md","embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.05503722,0.01328949,0.01291265,-0.0154169,-0.0345022,-0.00061105,-0.04341025,0.01039862,0.01011149,0.01815043,-0.00048894,-0.0512978,0.03121657,0.02599005,-0.01951494,-0.0174193,-0.01463801,0.03322807,-0.01700676,-0.0327161,0.13998275,-0.00738681,0.01890706,-0.04402463,0.000748,0.0382004,0.05095044,-0.03717746,-0.0398134,-0.18377475,-0.02567486,-0.0519739,0.05247487,-0.00114903,-0.00341989,-0.04809933,0.00173903,0.03534584,-0.09329233,0.05814131,0.02658829,0.06356154,0.03079906,-0.05134307,0.00140077,-0.0206767,-0.01487672,0.02628665,0.00305778,-0.0570347,-0.03110247,-0.03006172,-0.03463063,0.04541487,-0.06031727,-0.02633892,0.08776024,0.05227834,-0.0092868,0.00601908,0.01294594,0.03232188,-0.24283414,0.04721407,0.05864017,-0.02729962,0.02619774,-0.06946797,0.06696885,0.07487614,0.00086518,-0.01047913,0.02868353,0.06210982,-0.00274186,-0.04592513,0.01481482,-0.0462142,-0.00914264,-0.0343551,-0.09930415,0.00326251,-0.00171229,-0.0482084,0.01646784,-0.03208341,-0.0258787,-0.04828956,0.07004623,-0.01870265,0.05008353,-0.06645447,-0.01688201,0.00120674,-0.04530959,-0.05958312,0.00169087,0.04295653,-0.04019393,0.10243969,-0.03607475,0.02902731,-0.03201844,-0.03661497,0.01305478,0.01689063,-0.0475179,-0.10148744,0.02559547,-0.03372806,-0.02598138,0.02616257,0.04887065,-0.04017761,-0.0279356,0.07885253,0.06172255,-0.06862915,-0.0820814,0.01015521,-0.05470929,-0.0179905,0.01955855,0.01448579,0.06224013,-0.06628139,0.01890558,0.08291058,0.02850298,0.0169613,0.01614204,0.03101726,-0.09462999,-0.06508265,-0.02035764,-0.02922596,-0.0031866,-0.02347134,-0.04295754,-0.0626366,0.01714578,-0.11170648,-0.00841091,-0.0512176,-0.06268922,0.1292838,-0.00761373,0.01781146,0.00968759,-0.04612141,0.02878926,0.01279639,-0.05323286,-0.07750078,0.01663389,-0.00990969,0.02779328,0.11276599,-0.02487806,0.02152961,-0.02562879,-0.01433833,-0.0231388,0.16064297,0.05389071,-0.03940693,0.00185842,0.01293735,0.02534343,-0.06943534,0.01627914,-0.01750947,-0.04338244,0.06871741,0.10295518,-0.02015063,-0.00293669,-0.00032848,-0.03825768,0.04134224,0.03175719,0.02328941,-0.06383161,0.08880925,0.01313061,-0.01684237,0.04967827,-0.03315067,0.03606404,0.0000939,-0.02629712,0.04590113,-0.03534127,-0.08935978,-0.06963194,-0.01185879,-0.02756139,-0.04397001,0.03291098,-0.03841121,0.12135008,0.06365345,-0.03558788,-0.00097258,-0.01494588,-0.02207176,-0.00138483,-0.02217014,0.05566984,0.0444464,-0.01969666,0.02525092,-0.01142469,0.04325867,0.02503043,-0.0214474,0.00482531,0.01456161,0.02284817,0.07784957,0.01305639,-0.04091491,-0.05673152,-0.17658393,-0.00447478,0.03309433,-0.07945082,0.02619138,0.07011224,0.00843682,-0.02119702,0.02276325,0.06937084,0.0496333,0.00063141,-0.01372731,0.06231109,-0.02120613,0.00998554,-0.02376557,-0.00339077,-0.03085313,0.01494936,-0.02154966,0.01970255,0.02785655,0.01333704,0.00537259,-0.04012798,0.09669277,-0.02622547,0.02020491,0.070239,0.06045788,-0.0520114,0.01592296,-0.08439425,0.01437041,-0.0116581,-0.03318241,-0.02781418,-0.00767486,-0.04251201,0.01111668,0.06817859,0.01076488,-0.02674561,-0.02982763,-0.00172201,-0.02808066,-0.0155643,-0.04844108,0.03065272,0.02673626,0.0166993,0.00707896,0.02749492,0.00238378,0.00550173,-0.00674301,-0.01018823,-0.03223066,-0.0360484,0.05070537,0.03232096,0.06198619,-0.01452042,-0.04421106,0.00802109,-0.00478497,0.0038368,0.00027834,-0.02959273,-0.06783847,0.13405319,0.03077015,-0.04678033,0.06788924,0.05950522,0.04598421,-0.03029613,0.02042369,-0.00777631,0.04837416,-0.00056735,-0.0017892,0.06193567,0.05090961,0.02999158,0.01771884,-0.03344316,0.00567872,-0.0382581,0.02472272,0.03251047,-0.03012528,0.03353374,0.01312056,0.06015553,-0.27296188,-0.03511294,-0.01956207,0.06709439,-0.00079591,0.021328,0.04072466,-0.03525205,-0.03227188,0.0530502,-0.03527211,0.03628486,0.02990839,-0.00685393,0.03042961,-0.09473993,0.09206586,-0.04351772,0.03872676,0.01716503,0.0293892,0.03875512,0.22280017,-0.016799,0.03803232,0.01489336,0.02378592,0.01505507,0.06110139,0.00465489,0.00057734,-0.027561,0.09450789,-0.03417667,0.02716903,0.02576608,0.02160253,0.00012198,-0.00160702,-0.0126131,-0.03951665,-0.03284517,-0.0758571,0.03562748,0.13390972,0.04837982,-0.00388466,-0.1002516,-0.02042806,0.04535694,-0.04398542,-0.04593113,0.03861995,0.02846513,0.00490332,0.04677295,0.01886933,0.02113332,-0.06743758,-0.05446997,0.03525154,0.01145216,-0.00675555,0.08031852,0.02270035],"tokens":471}},"last_embed":{"hash":"06266d8fa1a098c69b929aa9ac01a3b4a9133ea5196beeac3a32b2ac7bbd9a18"},"history":[],"last_read":{"hash":"06266d8fa1a098c69b929aa9ac01a3b4a9133ea5196beeac3a32b2ac7bbd9a18","at":1734612060683},"class_name":"SmartSource","outlinks":[{"title":"选择排序","target":"选择排序","line":5},{"title":"冒泡排序","target":"冒泡排序","line":6},{"title":"插入排序","target":"插入排序","line":7},{"title":"在一个有序数组中，找某个数是否存在","target":"在一个有序数组中，找某个数是否存在","line":8},{"title":"在一个有序数组中，找大于等于某个数最左侧的位置","target":"在一个有序数组中，找大于等于某个数最左侧的位置","line":9},{"title":"在一个有序数组中，找小于等于某个数最右侧的位置","target":"在一个有序数组中，找小于等于某个数最右侧的位置","line":10},{"title":"局部最小值问题","target":"局部最小值问题","line":11},{"title":"如何不用额外变量交换两个数","target":"如何不用额外变量交换两个数","line":12},{"title":"一个数组中出现了奇数次的数","target":"一个数组中出现了奇数次的数","line":13},{"title":"提取整形数最右侧的1","target":"提取整形数最右侧的1","line":14},{"title":"一个数组中出现奇数次的两个数","target":"一个数组中出现奇数次的两个数","line":15},{"title":"一个数组中有一种数出现K次，其他数都出现了M次","target":"一个数组中有一种数出现K次，其他数都出现了M次","line":16},{"title":"单链表和双链表如何反转","target":"单链表和双链表如何反转","line":17},{"title":"把链表中的给定值都删除","target":"把链表中的给定值都删除","line":18},{"title":"双向链表实现栈和队列","target":"双向链表实现栈和队列","line":19},{"title":"数组实现栈和队列","target":"数组实现栈和队列","line":20},{"title":"实现最小栈","target":"实现最小栈","line":21},{"title":"如何用栈结构实现队列结构","target":"如何用栈结构实现队列结构","line":22},{"title":"如何用队列结构实现栈结构","target":"如何用队列结构实现栈结构","line":23},{"title":"用递归方法求数组中的最大值","target":"用递归方法求数组中的最大值","line":24},{"title":"求数组小和","target":"求数组小和","line":25},{"title":"求数组中的逆序对数量","target":"求数组中的逆序对数量","line":26},{"title":"求数组中的大两倍数对数量","target":"求数组中的大两倍数对数量","line":27},{"title":"区间和达标的子数组数量","target":"区间和达标的子数组数量","line":28},{"title":"快速排序","target":"快速排序","line":29},{"title":"手写堆","target":"手写堆","line":30},{"title":"堆排序","target":"堆排序","line":31},{"title":"相对几乎有序数组排序","target":"相对几乎有序数组排序","line":32},{"title":"最大线段重合问题","target":"最大线段重合问题-堆实现","line":33},{"title":"给购买次数最多的前K名用户颁奖","target":"给购买次数最多的前K名用户颁奖","line":34},{"title":"固定数组实现前缀树","target":"固定数组实现前缀树","line":35},{"title":"哈希表实现前缀树","target":"哈希表实现前缀树","line":36},{"title":"计数排序","target":"计数排序","line":37},{"title":"基数排序代码","target":"基数排序代码","line":38},{"title":"在整型数组中把奇数放在左边偶数放在右边且保持稳定性","target":"在整型数组中把奇数放在左边偶数放在右边且保持稳定性","line":39},{"title":"判断链表是否为回文结构","target":"判断链表是否为回文结构","line":40},{"title":"将单向链表按某值划分成左边小、中间相等、右边大的形式","target":"将单向链表按某值划分成左边小、中间相等、右边大的形式","line":41},{"title":"链表改序问题","target":"链表改序问题","line":42},{"title":"深度复制带有rand指针的链表","target":"深度复制带有rand指针的链表","line":43},{"title":"两个可能有环的单链表相交的第一个节点","target":"两个可能有环的单链表相交的第一个节点","line":44},{"title":"二叉树某一节点X祖先节点的交集","target":"二叉树某一节点X祖先节点的交集","line":45},{"title":"非递归方式实现二叉树的三序遍历","target":"非递归方式实现二叉树的三序遍历","line":46},{"title":"不给头结点,删除单链表上的节点","target":"不给头结点,删除单链表上的节点","line":47},{"title":"实现二叉树的按层遍历","target":"实现二叉树的按层遍历","line":48},{"title":"二叉树的序列化和反序列化","target":"二叉树的序列化和反序列化","line":49},{"title":"将 N 叉树编码为二叉树","target":"将 N 叉树编码为二叉树","line":50},{"title":"如何设计一个打印整棵树的打印函数","target":"如何设计一个打印整棵树的打印函数","line":51},{"title":"求二叉树最宽的层有多少个节点","target":"求二叉树最宽的层有多少个节点","line":52},{"title":"二叉树中指定节点的后继节点","target":"二叉树中指定节点的后继节点","line":53},{"title":"从上到下打印对折纸条所有折痕的方向","target":"从上到下打印对折纸条所有折痕的方向","line":54},{"title":"判断二叉树是不是平衡二叉树","target":"判断二叉树是不是平衡二叉树","line":55},{"title":"判断二叉树是不是满二叉树","target":"判断二叉树是不是满二叉树","line":56},{"title":"判断二叉树是不是搜索二叉树","target":"判断二叉树是不是搜索二叉树","line":57},{"title":"二叉树中最大的二叉搜索子树的大小","target":"二叉树中最大的二叉搜索子树的大小","line":58},{"title":"判断二叉树是不是完全二叉树","target":"判断二叉树是不是完全二叉树","line":59},{"title":"二叉树中最大的二叉搜索子树的头节点","target":"二叉树中最大的二叉搜索子树的头节点","line":60},{"title":"二叉树上两个节点的最低公共祖先","target":"二叉树上两个节点的最低公共祖先","line":61},{"title":"求二叉树两个节点的最大距离","target":"求二叉树两个节点的最大距离","line":62},{"title":"派对的最大快乐值","target":"派对的最大快乐值","line":63},{"title":"字符串组成的数组拼接后字典序最小的结果","target":"字符串组成的数组拼接后字典序最小的结果","line":64},{"title":"会议室能容纳的最多宣讲场次","target":"会议室能容纳的最多宣讲场次","line":65},{"title":"金条分割的最小代价","target":"金条分割的最小代价","line":66},{"title":"点亮str中所有需要点亮的位置至少需要几盏灯","target":"点亮str中所有需要点亮的位置至少需要几盏灯","line":67},{"title":"做项目获得的最大钱数","target":"做项目获得的最大钱数","line":68},{"title":"朋友圈","target":"朋友圈","line":69},{"title":"岛问题","target":"岛屿数量","line":70},{"title":"岛屿数量 II","target":"岛屿数量 II","line":71},{"title":"并行算法","target":"并行算法","line":72},{"title":"图的拓扑排序算法","target":"图的拓扑排序算法","line":73},{"title":"最小生成树算法之Kruskal","target":"最小生成树算法之Kruskal","line":74},{"title":"最小生成树算法之Prim","target":"最小生成树算法之Prim","line":75},{"title":"Dijkstra算法","target":"Dijkstra算法","line":76},{"title":"打印n层汉诺塔从最左边移动到最右边的全部过程","target":"打印n层汉诺塔从最左边移动到最右边的全部过程","line":77},{"title":"打印一个字符串的全部子序列","target":"打印一个字符串的全部子序列","line":78},{"title":"打印一个字符串无重复的全部子序列","target":"打印一个字符串无重复的全部子序列","line":79},{"title":"打印一个字符串的全部排列","target":"打印一个字符串的全部排列","line":80},{"title":"打印一个字符串的全部排列，要求不要出现重复的排列","target":"打印一个字符串的全部排列，要求不要出现重复的排列","line":81},{"title":"递归逆序一个栈","target":"递归逆序一个栈","line":82},{"title":"数字转化为字符串的结果数","target":"数字转化为字符串的结果数","line":83},{"title":"背包能装下最多的价值","target":"背包能装下最多的价值","line":84},{"title":"机器人必须走 K 步，最终能来到P位置的方法有多少种","target":"机器人必须走 K 步，最终能来到P位置的方法有多少种","line":85},{"title":"A,B玩家从左右两边拿纸牌,返回最后获胜者的分数","target":"A,B玩家从左右两边拿纸牌,返回最后获胜者的分数","line":86},{"title":"背包能装下最多的价值","target":"背包能装下最多的价值","line":87},{"title":"数字转化为字符串的结果数","target":"数字转化为字符串的结果数","line":88},{"title":"贴纸拼词","target":"多少张贴纸可以贴出给定字符串","line":89},{"title":"最长公共子序列","target":"最长公共子序列","line":90},{"title":"最长回文子序列","target":"最长回文子序列","line":91},{"title":"象棋问题-马只走K步跳到指定位置的方法数","target":"象棋问题-马只走K步跳到指定位置的方法数","line":92},{"title":"所有咖啡杯变干净的最早时间","target":"所有咖啡杯变干净的最早时间","line":93},{"title":"货币数组组成面值的方法数-同值认为不同","target":"货币数组组成面值的方法数-同值认为不同","line":94},{"title":"面值数组组成面值的方法数-张数不限","target":"面值数组组成面值的方法数-张数不限","line":95},{"title":"货币数组组成面值的方法数-同值无差别(张数限定)","target":"货币数组组成面值的方法数-同值无差别(张数限定)","line":96},{"title":"Bob生还的概率","target":"Bob生还的概率","line":97},{"title":"英雄砍死怪兽的概率","target":"英雄砍死怪兽的概率","line":98},{"title":"面值数组组成面值的最少货币数","target":"面值数组组成面值的最少货币数","line":99},{"title":"整数拆分","target":"整数拆分","line":100},{"title":"正数数组分割为累加和接近的两个集合","target":"正数数组分割为累加和接近的两个集合","line":101},{"title":"正数数组分割为个数跟累加和接近的两个集合","target":"正数数组分割为个数跟累加和接近的两个集合","line":102},{"title":"N皇后问题","target":"N皇后问题","line":103},{"title":"滑动窗口最大值","target":"滑动窗口最大值","line":104},{"title":"整形数组中子数组最大值减最小值达标的子数组个数","target":"整形数组中子数组最大值减最小值达标的子数组个数","line":105},{"title":"加油站的良好出发点问题","target":"加油站的良好出发点问题","line":106},{"title":"货币数组组成面值的最少货币数","target":"货币数组组成面值的最少货币数","line":107},{"title":"单调栈代码","target":"单调栈代码","line":108},{"title":"子数组最小乘积的最大值","target":"子数组最小乘积的最大值","line":109},{"title":"柱状图中最大的矩形","target":"柱状图中最大的矩形","line":110},{"title":"最大矩形","target":"全是1的最大子矩形面积","line":111},{"title":"统计全 1 子矩形","target":"全是1的子矩阵数量","line":112},{"title":"子数组最小值的累加和","target":"子数组最小值的累加和","line":113},{"title":"斐波那契数列矩阵乘法方式的实现","target":"斐波那契数列矩阵乘法方式的实现","line":114},{"title":"一个人迈上N级台阶的方法数","target":"一个人迈上N级台阶的方法数","line":115},{"title":"母牛生小牛, N年后牛的数量","target":"母牛生小牛, N年后牛的数量","line":116},{"title":"由0和1两种字符构成的达标字符串","target":"由0和1两种字符构成的达标字符串","line":117},{"title":"KMP算法代码","target":"KMP算法代码","line":118},{"title":"Manacher算法代码","target":"Manacher算法代码","line":119},{"title":"字符串变为回文需要添加的最少字符","target":"字符串变为回文需要添加的最少字符","line":120},{"title":"旋转字符串","target":"判断两个字符串是否互为旋转词","line":121},{"title":"两棵二叉树是否有一致结构的子树","target":"两棵二叉树是否有一致结构的子树","line":122},{"title":"在无序数组中求第K小的数","target":"在无序数组中求第K小的数","line":123},{"title":"无序数组中求Top K","target":"无序数组中求Top K","line":124},{"title":"机器所有吐出的球都等概率放进袋子里","target":"机器所有吐出的球都等概率放进袋子里","line":125},{"title":"服务器今天登录所有用户抽出100个幸运观众","target":"服务器今天登录所有用户抽出100个幸运观众","line":126},{"title":"Morris遍历代码","target":"Morris遍历代码","line":127},{"title":"Morris实现前序遍历","target":"Morris实现前序遍历","line":128},{"title":"Morris实现中序遍历","target":"Morris实现中序遍历","line":129},{"title":"Morris实现后序遍历","target":"Morris实现后序遍历","line":130},{"title":"二叉树的最小深度","target":"二叉树的最小深度","line":131},{"title":"判断二叉树是不是平衡二叉树","target":"判断二叉树是不是平衡二叉树","line":132},{"title":"线段树实例一","target":"线段树实例一","line":133},{"title":"线段树实例二","target":"方块掉落之后的最大高度","line":134},{"title":"IndexTree","target":"IndexTree","line":135},{"title":"AC自动机","target":"AC自动机","line":136},{"title":"布隆过滤器","target":"布隆过滤器","line":137},{"title":"一致性哈希","target":"一致性哈希","line":138},{"title":"1G内存40亿个无符号整数的文件中找到出现次数最多的数","target":"1G内存40亿个无符号整数的文件中找到出现次数最多的数","line":139},{"title":"100亿个URL的大文件中找出其中所有重复的URL","target":"100亿个URL的大文件中找出其中所有重复的URL","line":141},{"title":"40亿个无符号整数找出所有出现了两次的数","target":"40亿个无符号整数找出所有出现了两次的数","line":142},{"title":"40亿个无符号整数的中位数","target":"40亿个无符号整数的中位数","line":143},{"title":"有一个10G大小的文件中的数字排序","target":"有一个10G大小的文件中的数字排序","line":144},{"title":"求出每天热门Top100词汇","target":"求出每天热门Top100词汇","line":145},{"title":"搜索二叉树","target":"搜索二叉树","line":146},{"title":"AVL树","target":"AVL树","line":147},{"title":"SB树（size-balance-tree）","target":"SB树（size-balance-tree）","line":148},{"title":"跳表（skiplist）","target":"跳表（skiplist）","line":149},{"title":"区间和达标的子数组数量","target":"区间和达标的子数组数量","line":150},{"title":"滑动窗口中位数","target":"滑动窗口中位数","line":151},{"title":"设计一种复杂度为O(logN)高效数据结构","target":"设计一种复杂度为O(logN)高效数据结构","line":152},{"title":"红黑树","target":"红黑树","line":153},{"title":"小虎买苹果","target":"给定一个正整数N，返回至少使用多少袋子装苹果","line":154},{"title":"牛羊吃N份青草谁会赢","target":"牛羊吃N份青草谁会赢","line":155},{"title":"给定一个参数N，返回是不是可以表示成若干连续正数和的数","target":"给定一个参数N，返回是不是可以表示成若干连续正数和的数","line":156},{"title":"打怪兽需要花的最小钱数","target":"打怪兽需要花的最小钱数","line":157},{"title":"非负数组子序列中累加和%m的最大值","target":"非负数组子序列中累加和%m的最大值","line":158},{"title":"背包中有多少种零食放法","target":"背包中有多少种零食放法","line":159},{"title":"卡特兰数","target":"卡特兰数","line":160},{"title":"N个无差别节点有多少种组成二叉数的方式","target":"N个无差别节点有多少种组成二叉数的方式","line":162},{"title":"累加和等于sum的子数组最长多长","target":"正整数组子数组累加和等于K的最大长度","line":163},{"title":"整数数组子数组累加和等于K的最大长度","target":"整数数组子数组累加和等于K的最大长度","line":164},{"title":"整数数组子数组累加和小于等于K的最大长度","target":"整数数组子数组累加和小于等于K的最大长度","line":165},{"title":"整数数组子数组平均值小于等于V的最大长度","target":"整数数组子数组平均值小于等于V的最大长度","line":166},{"title":"原地旋转正方形矩阵","target":"原地旋转正方形矩阵","line":167},{"title":"转圈打印矩阵","target":"转圈打印矩阵","line":168},{"title":"转圈打印N边星号正方形","target":"转圈打印N边星号正方形","line":169},{"title":"zigzag打印矩阵","target":"zigzag打印矩阵","line":170},{"title":"非负数组切分成左右两部分累加和的最大值","target":"非负数组切分成左右两部分累加和的最大值","line":171},{"title":"非负数组切分成左右两部分累加和的最大值的数组","target":"非负数组切分成左右两部分累加和的最大值的数组","line":172},{"title":"合并石子的得分","target":"合并石子的得分","line":173},{"title":"画匠问题","target":"画匠问题","line":174},{"title":"邮局选址问题","target":"邮局选址问题","line":175},{"title":"丢棋子问题","target":"丢棋子问题","line":176},{"title":"我能赢吗","target":"我能赢吗","line":177},{"title":"TSP问题","target":"TSP问题","line":178},{"title":"瓷砖问题","target":"瓷砖问题","line":179},{"title":"DC3生成后缀数组","target":"DC3生成后缀数组","line":180},{"title":"按字典序排在最后的子串","target":"按字典序排在最后的子串","line":181},{"title":"字符串插入形成的字典序最大结果","target":"字符串插入形成的字典序最大结果","line":182},{"title":"拼接最大数","target":"拼接最大数","line":183},{"title":"两个字符串的最长公共子串","target":"两个字符串的最长公共子串","line":184},{"title":"打气球的最大分数","target":"打气球的最大分数","line":185},{"title":"移除盒子","target":"移除盒子","line":186},{"title":"字符消除游戏","target":"字符消除游戏","line":187},{"title":"子数组长度不超过M的最大累加和","target":"子数组长度不超过M的最大累加和","line":188},{"title":"哈夫曼树","target":"哈夫曼树","line":189},{"title":"奇怪的打印机","target":"奇怪的打印机","line":190},{"title":"还原数组丢失的数字","target":"还原数组丢失的数字","line":191},{"title":"Internet Bandwidth","target":"Internet Bandwidth","line":192}],"last_import":{"mtime":1665385244000,"size":8744,"at":1734612056431,"hash":"06266d8fa1a098c69b929aa9ac01a3b4a9133ea5196beeac3a32b2ac7bbd9a18"},"blocks":{"#体系学习班题目汇总":[1,192],"#---frontmatter---":[3,null]}},
"smart_blocks:算法笔记/zuoAlgorithm/000. 学习大纲/__算法数据结构体系学习班题目汇总.md#体系学习班题目汇总": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.05417788,0.01426031,0.01226272,-0.01679861,-0.03533322,-0.0005725,-0.04263609,0.01077084,0.01018149,0.0182332,0.00001517,-0.05108134,0.03135106,0.02565089,-0.01894746,-0.01791951,-0.01582332,0.03385833,-0.01918532,-0.03302116,0.13913718,-0.00719304,0.01876755,-0.04342941,0.00090572,0.03745019,0.05079509,-0.03625486,-0.03895457,-0.183433,-0.02657971,-0.05273666,0.05350509,-0.00181441,-0.00452955,-0.04800385,0.00253059,0.03577475,-0.09377869,0.05765764,0.02675998,0.06511603,0.02873269,-0.05220638,0.00080429,-0.02176282,-0.01525096,0.02728133,0.00356661,-0.05698045,-0.02856333,-0.03101457,-0.03532827,0.04637202,-0.06036552,-0.02624584,0.08663648,0.05140783,-0.00979808,0.00686976,0.01211825,0.03155631,-0.24263634,0.04787407,0.05963513,-0.02788705,0.02529568,-0.07075652,0.0666619,0.07340389,0.00147837,-0.01133442,0.02924019,0.06105557,-0.00136698,-0.04726796,0.01489755,-0.04672342,-0.00966472,-0.03444722,-0.09874243,0.00122886,-0.00344772,-0.04809503,0.01717004,-0.03239578,-0.02502521,-0.04769505,0.06960079,-0.0196937,0.05035054,-0.06548122,-0.01580991,0.00012812,-0.04557103,-0.05888496,0.00211505,0.04405414,-0.0407785,0.10175765,-0.03538782,0.02863032,-0.03022968,-0.03758465,0.01290798,0.01780425,-0.04792202,-0.10259973,0.02556056,-0.03440255,-0.02573176,0.02598076,0.04741308,-0.03866161,-0.02767452,0.07775365,0.06138787,-0.07027561,-0.08272931,0.00976195,-0.05213516,-0.01870529,0.02037441,0.01437919,0.06432663,-0.06571556,0.01989805,0.08458866,0.0259367,0.01638292,0.01635077,0.03290824,-0.09396729,-0.06439998,-0.01962162,-0.02840738,-0.00294143,-0.0240224,-0.04347356,-0.06194422,0.01872987,-0.11097605,-0.00788652,-0.05195791,-0.06136477,0.12907176,-0.00700698,0.01888632,0.0111473,-0.04639966,0.02745916,0.01284648,-0.05263193,-0.07697462,0.01712068,-0.00962002,0.02757452,0.11179662,-0.02366553,0.02171601,-0.02640553,-0.01581288,-0.02317196,0.16026884,0.05433648,-0.04130357,0.00054046,0.01241917,0.02593442,-0.07047153,0.01430719,-0.01682403,-0.04309063,0.06782792,0.10383172,-0.02076363,-0.00346822,-0.00061874,-0.037885,0.0420619,0.0320373,0.02361042,-0.06368502,0.08936305,0.01448327,-0.01709739,0.0511723,-0.03286648,0.03583036,-0.00051501,-0.02542347,0.04445817,-0.03607098,-0.09030636,-0.06975616,-0.01100561,-0.02809499,-0.04320538,0.03356215,-0.03871872,0.12130324,0.06254335,-0.0353784,-0.00119903,-0.0143938,-0.021361,-0.00194215,-0.02082046,0.05869388,0.04173789,-0.01982271,0.02613306,-0.01053489,0.0421917,0.02456994,-0.02059747,0.00503409,0.01502602,0.02329216,0.0795692,0.01376099,-0.04093957,-0.05753844,-0.17605814,-0.00359563,0.03414301,-0.08075839,0.02558435,0.07159431,0.00860832,-0.02223333,0.0231028,0.06896282,0.04932113,0.00006186,-0.01243067,0.06145544,-0.02123223,0.01063845,-0.02259585,-0.00332172,-0.03034066,0.01592573,-0.02206489,0.01967713,0.02862168,0.0147539,0.00534081,-0.0418132,0.09582756,-0.02708692,0.02011897,0.07052378,0.05998676,-0.05279727,0.01527217,-0.08240043,0.01396296,-0.01158127,-0.03320942,-0.0292288,-0.00774557,-0.042107,0.01054014,0.06747386,0.0107859,-0.02886199,-0.02872382,-0.00282828,-0.02864417,-0.01605337,-0.04917559,0.02968451,0.02795064,0.01576427,0.00754406,0.02860554,0.0030246,0.00493801,-0.00552525,-0.00955185,-0.03401459,-0.03528219,0.05168135,0.03217253,0.06074992,-0.01401581,-0.04443844,0.00984132,-0.00486851,0.003428,0.00067886,-0.03075946,-0.06675065,0.13296527,0.03130725,-0.0475212,0.06775042,0.05793145,0.04506313,-0.03103757,0.02085119,-0.00878862,0.04751671,-0.00046085,-0.00223125,0.06236387,0.05107899,0.03132693,0.01996708,-0.03262233,0.00470181,-0.03747473,0.02501752,0.03274278,-0.02888408,0.03294644,0.01371245,0.06090618,-0.27397522,-0.03579938,-0.02134992,0.06680243,-0.00027293,0.02143938,0.03998757,-0.03487825,-0.03208078,0.0554006,-0.03436733,0.03613911,0.02879526,-0.00640469,0.03069632,-0.0939796,0.09152526,-0.04392207,0.03869461,0.01699685,0.02886299,0.03858744,0.22485039,-0.01729424,0.03699448,0.01437719,0.02136118,0.01443454,0.06148554,0.0040895,0.00143468,-0.02671664,0.09400973,-0.03387003,0.02640044,0.02626244,0.02452064,0.00099429,-0.00289601,-0.01321979,-0.03897935,-0.03333838,-0.07448328,0.03533545,0.13462386,0.0497674,-0.00373249,-0.09837838,-0.02046718,0.0449973,-0.0451504,-0.04686837,0.0391766,0.02828288,0.00532345,0.04684846,0.01654192,0.02070394,-0.06696256,-0.05421635,0.03574192,0.01141943,-0.00776977,0.07898556,0.02264083],"tokens":466}},"last_embed":{"hash":"06266d8fa1a098c69b929aa9ac01a3b4a9133ea5196beeac3a32b2ac7bbd9a18"},"text":null,"length":0,"last_read":{"hash":"06266d8fa1a098c69b929aa9ac01a3b4a9133ea5196beeac3a32b2ac7bbd9a18","at":1734612060666},"class_name":"SmartBlock","key":"算法笔记/zuoAlgorithm/000. 学习大纲/__算法数据结构体系学习班题目汇总.md#体系学习班题目汇总","lines":[1,192],"size":4370,"outlinks":[{"title":"选择排序","target":"选择排序","line":5},{"title":"冒泡排序","target":"冒泡排序","line":6},{"title":"插入排序","target":"插入排序","line":7},{"title":"在一个有序数组中，找某个数是否存在","target":"在一个有序数组中，找某个数是否存在","line":8},{"title":"在一个有序数组中，找大于等于某个数最左侧的位置","target":"在一个有序数组中，找大于等于某个数最左侧的位置","line":9},{"title":"在一个有序数组中，找小于等于某个数最右侧的位置","target":"在一个有序数组中，找小于等于某个数最右侧的位置","line":10},{"title":"局部最小值问题","target":"局部最小值问题","line":11},{"title":"如何不用额外变量交换两个数","target":"如何不用额外变量交换两个数","line":12},{"title":"一个数组中出现了奇数次的数","target":"一个数组中出现了奇数次的数","line":13},{"title":"提取整形数最右侧的1","target":"提取整形数最右侧的1","line":14},{"title":"一个数组中出现奇数次的两个数","target":"一个数组中出现奇数次的两个数","line":15},{"title":"一个数组中有一种数出现K次，其他数都出现了M次","target":"一个数组中有一种数出现K次，其他数都出现了M次","line":16},{"title":"单链表和双链表如何反转","target":"单链表和双链表如何反转","line":17},{"title":"把链表中的给定值都删除","target":"把链表中的给定值都删除","line":18},{"title":"双向链表实现栈和队列","target":"双向链表实现栈和队列","line":19},{"title":"数组实现栈和队列","target":"数组实现栈和队列","line":20},{"title":"实现最小栈","target":"实现最小栈","line":21},{"title":"如何用栈结构实现队列结构","target":"如何用栈结构实现队列结构","line":22},{"title":"如何用队列结构实现栈结构","target":"如何用队列结构实现栈结构","line":23},{"title":"用递归方法求数组中的最大值","target":"用递归方法求数组中的最大值","line":24},{"title":"求数组小和","target":"求数组小和","line":25},{"title":"求数组中的逆序对数量","target":"求数组中的逆序对数量","line":26},{"title":"求数组中的大两倍数对数量","target":"求数组中的大两倍数对数量","line":27},{"title":"区间和达标的子数组数量","target":"区间和达标的子数组数量","line":28},{"title":"快速排序","target":"快速排序","line":29},{"title":"手写堆","target":"手写堆","line":30},{"title":"堆排序","target":"堆排序","line":31},{"title":"相对几乎有序数组排序","target":"相对几乎有序数组排序","line":32},{"title":"最大线段重合问题","target":"最大线段重合问题-堆实现","line":33},{"title":"给购买次数最多的前K名用户颁奖","target":"给购买次数最多的前K名用户颁奖","line":34},{"title":"固定数组实现前缀树","target":"固定数组实现前缀树","line":35},{"title":"哈希表实现前缀树","target":"哈希表实现前缀树","line":36},{"title":"计数排序","target":"计数排序","line":37},{"title":"基数排序代码","target":"基数排序代码","line":38},{"title":"在整型数组中把奇数放在左边偶数放在右边且保持稳定性","target":"在整型数组中把奇数放在左边偶数放在右边且保持稳定性","line":39},{"title":"判断链表是否为回文结构","target":"判断链表是否为回文结构","line":40},{"title":"将单向链表按某值划分成左边小、中间相等、右边大的形式","target":"将单向链表按某值划分成左边小、中间相等、右边大的形式","line":41},{"title":"链表改序问题","target":"链表改序问题","line":42},{"title":"深度复制带有rand指针的链表","target":"深度复制带有rand指针的链表","line":43},{"title":"两个可能有环的单链表相交的第一个节点","target":"两个可能有环的单链表相交的第一个节点","line":44},{"title":"二叉树某一节点X祖先节点的交集","target":"二叉树某一节点X祖先节点的交集","line":45},{"title":"非递归方式实现二叉树的三序遍历","target":"非递归方式实现二叉树的三序遍历","line":46},{"title":"不给头结点,删除单链表上的节点","target":"不给头结点,删除单链表上的节点","line":47},{"title":"实现二叉树的按层遍历","target":"实现二叉树的按层遍历","line":48},{"title":"二叉树的序列化和反序列化","target":"二叉树的序列化和反序列化","line":49},{"title":"将 N 叉树编码为二叉树","target":"将 N 叉树编码为二叉树","line":50},{"title":"如何设计一个打印整棵树的打印函数","target":"如何设计一个打印整棵树的打印函数","line":51},{"title":"求二叉树最宽的层有多少个节点","target":"求二叉树最宽的层有多少个节点","line":52},{"title":"二叉树中指定节点的后继节点","target":"二叉树中指定节点的后继节点","line":53},{"title":"从上到下打印对折纸条所有折痕的方向","target":"从上到下打印对折纸条所有折痕的方向","line":54},{"title":"判断二叉树是不是平衡二叉树","target":"判断二叉树是不是平衡二叉树","line":55},{"title":"判断二叉树是不是满二叉树","target":"判断二叉树是不是满二叉树","line":56},{"title":"判断二叉树是不是搜索二叉树","target":"判断二叉树是不是搜索二叉树","line":57},{"title":"二叉树中最大的二叉搜索子树的大小","target":"二叉树中最大的二叉搜索子树的大小","line":58},{"title":"判断二叉树是不是完全二叉树","target":"判断二叉树是不是完全二叉树","line":59},{"title":"二叉树中最大的二叉搜索子树的头节点","target":"二叉树中最大的二叉搜索子树的头节点","line":60},{"title":"二叉树上两个节点的最低公共祖先","target":"二叉树上两个节点的最低公共祖先","line":61},{"title":"求二叉树两个节点的最大距离","target":"求二叉树两个节点的最大距离","line":62},{"title":"派对的最大快乐值","target":"派对的最大快乐值","line":63},{"title":"字符串组成的数组拼接后字典序最小的结果","target":"字符串组成的数组拼接后字典序最小的结果","line":64},{"title":"会议室能容纳的最多宣讲场次","target":"会议室能容纳的最多宣讲场次","line":65},{"title":"金条分割的最小代价","target":"金条分割的最小代价","line":66},{"title":"点亮str中所有需要点亮的位置至少需要几盏灯","target":"点亮str中所有需要点亮的位置至少需要几盏灯","line":67},{"title":"做项目获得的最大钱数","target":"做项目获得的最大钱数","line":68},{"title":"朋友圈","target":"朋友圈","line":69},{"title":"岛问题","target":"岛屿数量","line":70},{"title":"岛屿数量 II","target":"岛屿数量 II","line":71},{"title":"并行算法","target":"并行算法","line":72},{"title":"图的拓扑排序算法","target":"图的拓扑排序算法","line":73},{"title":"最小生成树算法之Kruskal","target":"最小生成树算法之Kruskal","line":74},{"title":"最小生成树算法之Prim","target":"最小生成树算法之Prim","line":75},{"title":"Dijkstra算法","target":"Dijkstra算法","line":76},{"title":"打印n层汉诺塔从最左边移动到最右边的全部过程","target":"打印n层汉诺塔从最左边移动到最右边的全部过程","line":77},{"title":"打印一个字符串的全部子序列","target":"打印一个字符串的全部子序列","line":78},{"title":"打印一个字符串无重复的全部子序列","target":"打印一个字符串无重复的全部子序列","line":79},{"title":"打印一个字符串的全部排列","target":"打印一个字符串的全部排列","line":80},{"title":"打印一个字符串的全部排列，要求不要出现重复的排列","target":"打印一个字符串的全部排列，要求不要出现重复的排列","line":81},{"title":"递归逆序一个栈","target":"递归逆序一个栈","line":82},{"title":"数字转化为字符串的结果数","target":"数字转化为字符串的结果数","line":83},{"title":"背包能装下最多的价值","target":"背包能装下最多的价值","line":84},{"title":"机器人必须走 K 步，最终能来到P位置的方法有多少种","target":"机器人必须走 K 步，最终能来到P位置的方法有多少种","line":85},{"title":"A,B玩家从左右两边拿纸牌,返回最后获胜者的分数","target":"A,B玩家从左右两边拿纸牌,返回最后获胜者的分数","line":86},{"title":"背包能装下最多的价值","target":"背包能装下最多的价值","line":87},{"title":"数字转化为字符串的结果数","target":"数字转化为字符串的结果数","line":88},{"title":"贴纸拼词","target":"多少张贴纸可以贴出给定字符串","line":89},{"title":"最长公共子序列","target":"最长公共子序列","line":90},{"title":"最长回文子序列","target":"最长回文子序列","line":91},{"title":"象棋问题-马只走K步跳到指定位置的方法数","target":"象棋问题-马只走K步跳到指定位置的方法数","line":92},{"title":"所有咖啡杯变干净的最早时间","target":"所有咖啡杯变干净的最早时间","line":93},{"title":"货币数组组成面值的方法数-同值认为不同","target":"货币数组组成面值的方法数-同值认为不同","line":94},{"title":"面值数组组成面值的方法数-张数不限","target":"面值数组组成面值的方法数-张数不限","line":95},{"title":"货币数组组成面值的方法数-同值无差别(张数限定)","target":"货币数组组成面值的方法数-同值无差别(张数限定)","line":96},{"title":"Bob生还的概率","target":"Bob生还的概率","line":97},{"title":"英雄砍死怪兽的概率","target":"英雄砍死怪兽的概率","line":98},{"title":"面值数组组成面值的最少货币数","target":"面值数组组成面值的最少货币数","line":99},{"title":"整数拆分","target":"整数拆分","line":100},{"title":"正数数组分割为累加和接近的两个集合","target":"正数数组分割为累加和接近的两个集合","line":101},{"title":"正数数组分割为个数跟累加和接近的两个集合","target":"正数数组分割为个数跟累加和接近的两个集合","line":102},{"title":"N皇后问题","target":"N皇后问题","line":103},{"title":"滑动窗口最大值","target":"滑动窗口最大值","line":104},{"title":"整形数组中子数组最大值减最小值达标的子数组个数","target":"整形数组中子数组最大值减最小值达标的子数组个数","line":105},{"title":"加油站的良好出发点问题","target":"加油站的良好出发点问题","line":106},{"title":"货币数组组成面值的最少货币数","target":"货币数组组成面值的最少货币数","line":107},{"title":"单调栈代码","target":"单调栈代码","line":108},{"title":"子数组最小乘积的最大值","target":"子数组最小乘积的最大值","line":109},{"title":"柱状图中最大的矩形","target":"柱状图中最大的矩形","line":110},{"title":"最大矩形","target":"全是1的最大子矩形面积","line":111},{"title":"统计全 1 子矩形","target":"全是1的子矩阵数量","line":112},{"title":"子数组最小值的累加和","target":"子数组最小值的累加和","line":113},{"title":"斐波那契数列矩阵乘法方式的实现","target":"斐波那契数列矩阵乘法方式的实现","line":114},{"title":"一个人迈上N级台阶的方法数","target":"一个人迈上N级台阶的方法数","line":115},{"title":"母牛生小牛, N年后牛的数量","target":"母牛生小牛, N年后牛的数量","line":116},{"title":"由0和1两种字符构成的达标字符串","target":"由0和1两种字符构成的达标字符串","line":117},{"title":"KMP算法代码","target":"KMP算法代码","line":118},{"title":"Manacher算法代码","target":"Manacher算法代码","line":119},{"title":"字符串变为回文需要添加的最少字符","target":"字符串变为回文需要添加的最少字符","line":120},{"title":"旋转字符串","target":"判断两个字符串是否互为旋转词","line":121},{"title":"两棵二叉树是否有一致结构的子树","target":"两棵二叉树是否有一致结构的子树","line":122},{"title":"在无序数组中求第K小的数","target":"在无序数组中求第K小的数","line":123},{"title":"无序数组中求Top K","target":"无序数组中求Top K","line":124},{"title":"机器所有吐出的球都等概率放进袋子里","target":"机器所有吐出的球都等概率放进袋子里","line":125},{"title":"服务器今天登录所有用户抽出100个幸运观众","target":"服务器今天登录所有用户抽出100个幸运观众","line":126},{"title":"Morris遍历代码","target":"Morris遍历代码","line":127},{"title":"Morris实现前序遍历","target":"Morris实现前序遍历","line":128},{"title":"Morris实现中序遍历","target":"Morris实现中序遍历","line":129},{"title":"Morris实现后序遍历","target":"Morris实现后序遍历","line":130},{"title":"二叉树的最小深度","target":"二叉树的最小深度","line":131},{"title":"判断二叉树是不是平衡二叉树","target":"判断二叉树是不是平衡二叉树","line":132},{"title":"线段树实例一","target":"线段树实例一","line":133},{"title":"线段树实例二","target":"方块掉落之后的最大高度","line":134},{"title":"IndexTree","target":"IndexTree","line":135},{"title":"AC自动机","target":"AC自动机","line":136},{"title":"布隆过滤器","target":"布隆过滤器","line":137},{"title":"一致性哈希","target":"一致性哈希","line":138},{"title":"1G内存40亿个无符号整数的文件中找到出现次数最多的数","target":"1G内存40亿个无符号整数的文件中找到出现次数最多的数","line":139},{"title":"100亿个URL的大文件中找出其中所有重复的URL","target":"100亿个URL的大文件中找出其中所有重复的URL","line":141},{"title":"40亿个无符号整数找出所有出现了两次的数","target":"40亿个无符号整数找出所有出现了两次的数","line":142},{"title":"40亿个无符号整数的中位数","target":"40亿个无符号整数的中位数","line":143},{"title":"有一个10G大小的文件中的数字排序","target":"有一个10G大小的文件中的数字排序","line":144},{"title":"求出每天热门Top100词汇","target":"求出每天热门Top100词汇","line":145},{"title":"搜索二叉树","target":"搜索二叉树","line":146},{"title":"AVL树","target":"AVL树","line":147},{"title":"SB树（size-balance-tree）","target":"SB树（size-balance-tree）","line":148},{"title":"跳表（skiplist）","target":"跳表（skiplist）","line":149},{"title":"区间和达标的子数组数量","target":"区间和达标的子数组数量","line":150},{"title":"滑动窗口中位数","target":"滑动窗口中位数","line":151},{"title":"设计一种复杂度为O(logN)高效数据结构","target":"设计一种复杂度为O(logN)高效数据结构","line":152},{"title":"红黑树","target":"红黑树","line":153},{"title":"小虎买苹果","target":"给定一个正整数N，返回至少使用多少袋子装苹果","line":154},{"title":"牛羊吃N份青草谁会赢","target":"牛羊吃N份青草谁会赢","line":155},{"title":"给定一个参数N，返回是不是可以表示成若干连续正数和的数","target":"给定一个参数N，返回是不是可以表示成若干连续正数和的数","line":156},{"title":"打怪兽需要花的最小钱数","target":"打怪兽需要花的最小钱数","line":157},{"title":"非负数组子序列中累加和%m的最大值","target":"非负数组子序列中累加和%m的最大值","line":158},{"title":"背包中有多少种零食放法","target":"背包中有多少种零食放法","line":159},{"title":"卡特兰数","target":"卡特兰数","line":160},{"title":"N个无差别节点有多少种组成二叉数的方式","target":"N个无差别节点有多少种组成二叉数的方式","line":162},{"title":"累加和等于sum的子数组最长多长","target":"正整数组子数组累加和等于K的最大长度","line":163},{"title":"整数数组子数组累加和等于K的最大长度","target":"整数数组子数组累加和等于K的最大长度","line":164},{"title":"整数数组子数组累加和小于等于K的最大长度","target":"整数数组子数组累加和小于等于K的最大长度","line":165},{"title":"整数数组子数组平均值小于等于V的最大长度","target":"整数数组子数组平均值小于等于V的最大长度","line":166},{"title":"原地旋转正方形矩阵","target":"原地旋转正方形矩阵","line":167},{"title":"转圈打印矩阵","target":"转圈打印矩阵","line":168},{"title":"转圈打印N边星号正方形","target":"转圈打印N边星号正方形","line":169},{"title":"zigzag打印矩阵","target":"zigzag打印矩阵","line":170},{"title":"非负数组切分成左右两部分累加和的最大值","target":"非负数组切分成左右两部分累加和的最大值","line":171},{"title":"非负数组切分成左右两部分累加和的最大值的数组","target":"非负数组切分成左右两部分累加和的最大值的数组","line":172},{"title":"合并石子的得分","target":"合并石子的得分","line":173},{"title":"画匠问题","target":"画匠问题","line":174},{"title":"邮局选址问题","target":"邮局选址问题","line":175},{"title":"丢棋子问题","target":"丢棋子问题","line":176},{"title":"我能赢吗","target":"我能赢吗","line":177},{"title":"TSP问题","target":"TSP问题","line":178},{"title":"瓷砖问题","target":"瓷砖问题","line":179},{"title":"DC3生成后缀数组","target":"DC3生成后缀数组","line":180},{"title":"按字典序排在最后的子串","target":"按字典序排在最后的子串","line":181},{"title":"字符串插入形成的字典序最大结果","target":"字符串插入形成的字典序最大结果","line":182},{"title":"拼接最大数","target":"拼接最大数","line":183},{"title":"两个字符串的最长公共子串","target":"两个字符串的最长公共子串","line":184},{"title":"打气球的最大分数","target":"打气球的最大分数","line":185},{"title":"移除盒子","target":"移除盒子","line":186},{"title":"字符消除游戏","target":"字符消除游戏","line":187},{"title":"子数组长度不超过M的最大累加和","target":"子数组长度不超过M的最大累加和","line":188},{"title":"哈夫曼树","target":"哈夫曼树","line":189},{"title":"奇怪的打印机","target":"奇怪的打印机","line":190},{"title":"还原数组丢失的数字","target":"还原数组丢失的数字","line":191},{"title":"Internet Bandwidth","target":"Internet Bandwidth","line":192}]},
"smart_blocks:算法笔记/zuoAlgorithm/000. 学习大纲/__算法数据结构体系学习班题目汇总.md#---frontmatter---": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.05725043,0.0354827,0.05296122,0.00527849,0.03109371,-0.04669854,-0.05666735,0.0199306,0.04169579,0.03713495,0.02493478,-0.08532871,0.03068639,0.0188207,-0.00043005,0.01932883,-0.02004486,0.09192073,0.00169847,-0.02234875,0.14063878,-0.04004428,0.00425951,-0.08962279,0.02818952,0.04264928,-0.01895496,-0.02343556,0.00663408,-0.1666328,-0.02421804,-0.02636141,0.01355874,0.00154009,0.03854423,-0.00006531,-0.0317311,0.06027431,-0.10869538,0.05299711,0.01388621,0.04613236,0.00935428,-0.03347334,-0.01233975,0.01432195,-0.00930425,-0.0192286,0.03132348,-0.05982326,-0.02743364,-0.03998918,-0.01604038,0.0309926,-0.02023652,-0.01747118,0.06321204,0.02848189,-0.03356735,0.04501097,0.00112061,0.03318713,-0.19711868,0.03053832,0.06611491,-0.0098354,0.03490397,-0.0539018,0.04546559,0.08693026,-0.01406225,0.05083428,0.01886468,0.089541,0.00381521,-0.03920291,0.00710444,-0.03103471,-0.00709477,-0.00395139,-0.1269211,-0.05060327,-0.03160005,-0.01823325,-0.02306938,-0.05098312,-0.01461985,-0.02041681,0.057668,0.00521024,0.01321824,-0.02625613,0.0548358,0.01020398,-0.00163968,-0.0277168,-0.04832801,0.03775296,-0.07036837,0.10482754,-0.05504727,0.03468055,-0.0246292,-0.01633128,0.02079803,-0.00238348,-0.04171197,-0.04457432,0.02750121,-0.041146,0.05127434,-0.0098216,0.09302036,-0.04886063,0.01805216,-0.0089248,0.06330469,-0.02071208,-0.07868652,0.02069016,-0.08366559,-0.04012815,0.03409377,0.0006425,0.0462273,-0.02028027,0.0337792,0.08810179,0.03915105,0.02049842,0.00718224,-0.0272784,-0.07844815,-0.02102382,-0.01801598,-0.0180177,-0.01788892,-0.02828606,-0.03282459,-0.07190083,0.00589138,-0.06659853,0.02697303,-0.05040137,-0.03668639,0.0587338,-0.02349275,0.05109268,0.00406719,-0.03173094,-0.01102769,0.03789209,-0.06620908,-0.05417172,0.01818622,-0.07153309,0.04395747,0.12072968,-0.00638989,-0.01595549,-0.00959796,-0.02662265,-0.04968793,0.15023531,0.03153647,-0.01419791,0.02121577,0.01677511,-0.00684549,-0.04481003,-0.0157722,-0.02158947,-0.02857777,0.03962835,0.09180919,-0.00604898,0.01452463,-0.00131884,-0.05147734,0.04061577,0.04690669,-0.00023101,-0.06087231,0.04554362,0.02604268,-0.01350891,0.0598797,-0.04879095,0.05074356,0.02861208,-0.08866684,0.04120714,-0.04801706,-0.07467189,-0.04995862,0.00706911,-0.01266857,-0.05048888,-0.00280165,-0.01811987,0.10716163,0.05418841,-0.02637136,-0.03202109,-0.04785339,0.00194215,0.00653977,-0.02519085,0.03691209,0.05324152,-0.00248375,-0.02228525,0.00049731,0.03666953,0.02522571,-0.02959439,0.03152722,0.0292892,0.01201211,0.03052593,-0.00155689,0.00947171,-0.07854139,-0.22171199,0.02776592,0.0252307,-0.04597917,0.00009299,0.02069427,-0.00917804,-0.06243328,0.03596688,0.05614905,0.06640071,-0.01688121,-0.03488937,0.06403028,0.00691845,-0.00085718,0.04799728,-0.04966826,-0.06754051,0.01513821,0.01077359,-0.02765601,0.0107321,-0.03994288,0.0266377,-0.01983545,0.13144431,0.02939535,0.03572701,0.00924713,0.0316505,0.007222,-0.03118865,-0.20654806,-0.0001128,-0.0044509,-0.00510467,0.01087583,0.0199708,-0.02238665,0.0037401,0.03755758,-0.03551736,-0.09161615,-0.00561534,-0.00958207,-0.01100317,-0.02237079,-0.03313109,0.02518158,-0.00163315,0.05590941,0.08410308,0.07473511,-0.00107877,0.01740407,-0.04054501,-0.00088315,-0.05393193,0.00878049,-0.00598211,0.04057532,0.04037759,-0.05384912,-0.02116765,0.04746948,-0.02835494,0.01458097,0.01431592,0.00275096,-0.07322524,0.11060946,0.04341883,-0.07700878,-0.00153932,0.03686651,0.01556474,-0.01080771,-0.05253328,-0.03173378,0.04487733,-0.01435853,-0.00357649,0.03604558,0.00423993,0.00882622,0.00430297,-0.05360015,0.03494072,0.01201527,0.03304908,0.01374871,-0.03622737,0.01553537,0.0816116,0.00471839,-0.25577933,-0.00736353,0.02425263,0.03426795,-0.00541471,0.0767282,0.05527164,-0.04161235,-0.0176873,0.04036156,-0.09491675,0.07156996,0.04205534,-0.06041555,0.00178967,-0.05117979,0.08876127,-0.01557744,0.06715732,0.02939661,0.03458675,-0.00881277,0.23382428,-0.00953975,0.03525566,-0.02240364,0.02442198,0.0027974,0.04811136,-0.00432469,0.02443165,-0.00147577,0.03645922,-0.06705029,0.02027456,0.03143533,-0.01991155,0.05230005,-0.00503286,-0.02692833,-0.0879057,-0.01817851,-0.05616196,0.02162219,0.10813403,0.00707148,-0.04226647,-0.03897754,0.00503225,0.05291194,-0.05069784,-0.04926653,0.01923558,0.0550427,0.00233826,0.04569956,0.02364385,-0.00466926,-0.0565213,-0.03592133,0.04884776,0.0663852,-0.00208563,0.05895934,0.05177354],"tokens":50}},"last_embed":{"hash":null},"text":null,"length":0,"last_read":{"hash":null,"at":0},"class_name":"SmartBlock","key":"算法笔记/zuoAlgorithm/000. 学习大纲/__算法数据结构体系学习班题目汇总.md#---frontmatter---","lines":[3,null],"size":0,"outlinks":[]},